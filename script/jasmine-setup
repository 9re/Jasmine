#!/usr/bin/perl

use strict;
use warnings;
use utf8;
use Getopt::Long;
use Pod::Usage;
use File::ShareDir qw//;
use Jasmine::Setup::Skelton;

GetOptions(
    'help' => \my $help,
    'version' => \my $version
) or pod2usage(0);
pod2usage(1) if $help;
&show_version if $version;

&main;

sub show_version {
    require Jasmine;
    print "Perl: $]\n";
    print "Jasmine: $Jasmine::VERSION\n";
    exit(0);
}

sub main {
    my $module = shift @ARGV or pod2usage(0);
    my $skelton = Jasmine::Setup::Skelton->new(module => $module);
    
    my $dist = $skelton->{dist};
    mkdir $dist or die "Cannot mkdir '$dist': $!";
    chdir $dist or die $!;

    # copy files in dir
    # modified Kossy is in extlib
    foreach (qw(config extlib public views)) {
	$skelton->copy_shared_files($_);
    }

    # prepare skelton classes
    $skelton->render_file('app.psgi', 'app.psgi');
    $skelton->render_file('script/create_model.pl', 'script/create_model.pl');
    $skelton->render_file('lib/<<PATH>>.pm', 'lib/__PATH__.pm');
    $skelton->render_file('lib/<<PATH>>/Web.pm', 'lib/__PATH__/Web.pm');
    $skelton->render_file('lib/<<PATH>>/Container.pm', 'lib/__PATH__/Container.pm');
    $skelton->render_file('lib/<<PATH>>/Model/DB.pm', 'lib/__PATH__/Model/DB.pm');
    $skelton->render_file('lib/<<PATH>>/Model/Password.pm', 'lib/__PATH__/Model/Password.pm');
    $skelton->render_file('lib/<<PATH>>/Model/DB/Schema.pm', 'lib/__PATH__/Model/DB/Schema.pm');
    
    # prepare empty dir
    $skelton->mkpath('tmp/session');

    exit(0);
}

=head1 SYNOPSIS

    % jasmine-setup MyApp

=cut

1;
